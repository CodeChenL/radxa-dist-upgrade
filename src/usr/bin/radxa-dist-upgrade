#!/usr/bin/env bash

main() {
    set -euo pipefail
    shopt -s nullglob

    if (( EUID != 0 ))
    then
        if [[ -n "${DISPLAY:-}" ]] && [[ -z "${SSH_TTY:-}" ]]
        then
            exec pkexec "$0" "$@"
        else
            exec sudo "$0" "$@"
        fi
    fi

    DEBUG="${DEBUG:-false}"
    export PATH="$PATH:$SCRIPT_DIR/../lib/radxa-dist-upgrade"
    # shellcheck source=src/usr/lib/radxa-dist-upgrade/common.sh
    source "/usr/lib/radxa-dist-upgrade/common.sh"

    DISTRO="${DISTRO:-$(lsb_release -c | awk -F'\t' '{print $2}')}"

    # shellcheck source=src/usr/lib/radxa-dist-upgrade/bullseye.sh
    if ! source "$SCRIPT_DIR/../lib/radxa-dist-upgrade/$DISTRO.sh"
    then
        echo "$DISTRO is currently unsupported." >&2
        return 1
    fi

    menu_init
    menu_add checks "Check for upgrade"
    menu_add setup_source_list "Setup source list"
    menu_add pre_system_upgrade "Pre system upgrade"
    menu_add system_upgrade "System upgrade"
    menu_add post_system_upgrade "Post system upgrade"
    menu_show "Please select an operation below:"
}

SCRIPT_DIR="$(dirname "$(realpath "$0")")"

if [[ -f "$SCRIPT_DIR/../src/lib/librtui/tui.sh" ]]
then
    # shellcheck source=externals/librtui/src/lib/librtui/tui.sh
    source "$SCRIPT_DIR/../src/lib/librtui/tui.sh"
else
    # shellcheck source=externals/librtui/src/lib/librtui/tui.sh
    source "/usr/lib/librtui/tui.sh"
fi
tui_start main "radxa-dist-upgrade"
