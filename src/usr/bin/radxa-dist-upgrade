#!/usr/bin/env bash

main() {
    set -euo pipefail
    shopt -s nullglob

    export FLAG="1"
    export PATH="$PATH:$SCRIPT_DIR/../lib/radxa-dist-upgrade"
    # shellcheck source=src/usr/lib/radxa-dist-upgrade/common.sh
    source "/usr/lib/radxa-dist-upgrade/common.sh"

    local distro
    distro="$(lsb_release -c | awk -F'\t' '{print $2}')"

    # To fix make debug can't source $distro.sh
    if [[ "$DEBUG" == "true" ]] && [[ "$distro" == "n/a" ]]
    then
        distro="bullseye"
    fi

    # shellcheck source=src/usr/lib/radxa-dist-upgrade/bullseye.sh
    if ! source "/usr/lib/radxa-dist-upgrade/$distro.sh"
    then
        echo "$distro is currently unsupported." >&2
        return 1
    fi

    if [[ "$STEP" == "7" ]]
    then
        if yesno "Upgrade complete. Please reboot your system."
        then
            reboot
        else
            exit 0
        fi
    fi

    menu_init
    menu_add checks "Check for upgrade"
    menu_add check_system_upgrade "System upgrade"
    menu_add setup_source_list "Setup source list"
    menu_add pre_system_upgrade "Pre system upgrade"
    menu_add system_dist_upgrade "System distribution upgrade"
    menu_add post_system_upgrade "Post system upgrade"
    menu_show "Please select an operation below:"
}

export STEP="0"
DEBUG="${DEBUG:-false}"
SCRIPT_DIR="$(dirname "$(realpath "$0")")"

if [[ -f "$SCRIPT_DIR/../src/lib/librtui/tui.sh" ]]
then
    # shellcheck source=externals/librtui/src/lib/librtui/tui.sh
    source "$SCRIPT_DIR/../src/lib/librtui/tui.sh"
else
    # shellcheck source=externals/librtui/src/lib/librtui/tui.sh
    source "/usr/lib/librtui/tui.sh"
fi

tui_start main "radxa-dist-upgrade"
